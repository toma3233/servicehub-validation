# This file collects, filters and sends logs to Geneva. You should modify it according to your specific needs.

@include kubernetes.conf

# Retag to prefix servicehubval container events with servicehubval
<match kubernetes.var.log.containers.servicehubval-**servicehubval-**.log>
  @type rewrite_tag_filter
  <rule>
      key source
      pattern ^ApiRequestLog$
      tag apirequestlog
  </rule>
</match>

# Retag to prefix all other container events with k8scontainers
<match kubernetes.var.log.containers.**.log>
  @type rewrite_tag_filter
  <rule>
    key     ContainerName
    pattern ^(.+)$
    tag     k8scontainers.$1
  </rule>
</match>

# Send servicehubval events to MDSD
<match apirequestlog>
  @type mdsd
  @log_level info
  djsonsocket /var/run/mdsd/default_djson.socket  # Full path to mdsd dynamic json socket file
  acktimeoutms 5000  # max time in milliseconds to wait for mdsd acknowledge response. If 0, no wait.
  mdsd_tag_regex_patterns ["^apirequestlog"]  # fluentd tag patterns whose match will be used as mdsd source name
  num_threads 1
  buffer_chunk_limit 1000k
  buffer_type file
  buffer_path /var/log/td-agent/buffer/out_apirequestlog*.buffer
  buffer_queue_limit 128
  flush_interval 10s
  retry_limit 3
  retry_wait 10s
</match>

# Send all other kubernetes container events to MDSD
<match k8scontainers.**>
  @type mdsd
  @log_level info
  djsonsocket /var/run/mdsd/default_djson.socket  # Full path to mdsd dynamic json socket file
  acktimeoutms 5000  # max time in milliseconds to wait for mdsd acknowledge response. If 0, no wait.
  mdsd_tag_regex_patterns ["^k8scontainers"]  # fluentd tag patterns whose match will be used as mdsd source name
  num_threads 1
  buffer_chunk_limit 1000k
  buffer_type file
  buffer_path /var/log/td-agent/buffer/out_k8scontainers*.buffer
  buffer_queue_limit 128
  flush_interval 10s
  retry_limit 3
  retry_wait 10s
</match>

# Anything else goes to standard output
<match **>
  @type stdout
</match>